/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.2.2                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      reactingCloud1Properties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include "./system/parameters";

solution
{
    active          true;
    coupled         true;
    transient       yes;
    cellValueSourceCorrection on;

    sourceTerms
    {
        schemes
        {
            rho             explicit 1;
            U               explicit 1;
            Yi              explicit 1;
            h               explicit 1;
            radiation       explicit 1;
        }
    }

    interpolationSchemes
    {
        rho             cell;
        U               cellPoint;
        thermo:mu       cell;
        T               cell;
        Cp              cell;
        kappa           cell;
        p               cell;
    }

    integrationSchemes
    {
        U               Euler;
        T               analytical;
    }
}


constantProperties
{
    rho0            $liquidDensity;
    T0              $Tdrop;
    Cp0             4200;

    youngsModulus   1e9;
    poissonsRatio   0.35;

    epsilon0        1;
    f0              0.5;

    Tvap            273;
    Tbp             373;
    Pr              0.7;
    LDevol          0;
    hRetentionCoeff 1;

    constantVolume  false;
}


subModels
{
    particleForces
    {
        sphereDrag;
        gravity;
    }

    injectionModels
    {
        model1
        {
            type             patchInjection;
            patchName        injector;
            SOI              0;
            massTotal        $mainMassTotal;
            parcelBasisType  fixed;
            randomise        true;
            flowRateProfile  constant 0; // switch off as using fvOptions, otherwise set as 1;
            duration         $injectionDuration;
            nParticle        $particlesPerParcel;
            parcelsPerSecond $injectionFrequency;
            U0               $injectionVelocity;
            sizeDistribution
            {
                type        fixedValue;
                fixedValueDistribution
                {
                    value   $mainDiameter;
                }
            }
        }

        model2
        {
            type             patchInjection;
            patchName        injector;
            SOI              0;
            massTotal        $satelliteMassTotal;
            parcelBasisType  fixed;
            randomise        true;
            flowRateProfile  constant 0; // for this run, want no particles
            duration         $injectionDuration;
            nParticle        $particlesPerParcel;
            parcelsPerSecond $injectionFrequency;
            U0               $injectionVelocity;
            sizeDistribution
            {
                type        fixedValue;
                fixedValueDistribution
                {
                    value   $satelliteDiameter;
                }
            }
        }
    }

    dispersionModel stochasticDispersionRAS;

    patchInteractionModel standardWallInteraction;

    heatTransferModel none; //RanzMarshall;

    compositionModel singleMixtureFraction;

    phaseChangeModel none; // liquidEvaporationBoil;

    devolatilisationModel none;

    surfaceReactionModel none;

    stochasticCollisionModel none;

    surfaceFilmModel none;

    radiation       off;

    standardWallInteractionCoeffs
    {
        type            stick;
    }

    RanzMarshallCoeffs
    {
        BirdCorrection  off;
    }

    singleMixtureFractionCoeffs
    {
        phases
        (
            gas
            {
            }
            liquid
            {
                H2O         1;
            }
            solid
            {
            }
        );
        YGasTot0        0;
        YLiquidTot0     1;
        YSolidTot0      0;
    }

    liquidEvaporationBoilCoeffs
    {
        enthalpyTransfer enthalpyDifference;

        activeLiquids   ( H2O );
    }
}


cloudFunctions
{
    facePostProcessing1
    {
        type             facePostProcessing;
        surfaceFormat    vtk;
        resetOnWrite     no;
        log              yes;
        faceZones        (wallFaceZone outletFaceZone paperFaceZone);
    }
}


// ************************************************************************* //
